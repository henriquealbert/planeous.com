// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Plan {
  FREETRIAL
  ESSENTIAL
  PROFESSIONAL
  ADMIN
}

enum FieldsType {
  TEXT
  TEXTAREA
  NUMBER
  CURRENCY
  DATETIME
  SELECT
  MULTI_SELECT
  CHECKBOX
  CONTACT_LINK
  SEGMENTED_CONTROL
  EMAIL
  PHONE
  URL
  FILE
  RATING
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  isActive  Boolean  @default(true) @map("is_active")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  isActive  Boolean  @default(true) @map("is_active")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  isActive  Boolean  @default(true) @map("is_active")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@unique([identifier, token])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  terms         Boolean   @default(false)

  accounts       Account[]
  sessions       Session[]
  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?       @map("organization_id")

  isActive  Boolean  @default(true) @map("is_active")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model Organization {
  id      String @id @default(cuid())
  name    String
  slug    String @unique
  size    String
  plan    Plan   @default(FREETRIAL)
  ownerId String @map("owner_id")

  members  User[]
  contacts Contact[]

  isActive  Boolean  @default(true) @map("is_active")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  fields    Field[]

  @@unique([name, slug])
}

model Contact {
  id         String  @id @default(cuid())
  salutation String?
  firstName  String  @map("first_name")
  middleName String? @map("middle_name")
  lastName   String? @map("last_name")
  suffix     String?
  avatarUrl  String? @map("avatar_url")

  organizationId String         @map("organization_id")
  organization   Organization   @relation(fields: [organizationId], references: [id])
  contactField   ContactField[]

  isActive  Boolean  @default(true) @map("is_active")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model Field {
  id       String     @id @default(cuid())
  name     String
  type     FieldsType
  required Boolean    @default(false)
  order    Int?
  options  Json

  organizationId String         @map("organization_id")
  organization   Organization   @relation(fields: [organizationId], references: [id])
  contactField   ContactField[]

  isActive  Boolean  @default(true) @map("is_active")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model ContactField {
  id   String @id @default(cuid())
  data Json

  contactId String  @map("contact_id")
  fieldId   String  @map("field_id")
  contact   Contact @relation(fields: [contactId], references: [id])
  field     Field   @relation(fields: [fieldId], references: [id])

  isActive  Boolean  @default(true) @map("is_active")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}
